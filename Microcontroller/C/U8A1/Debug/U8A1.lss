
U8A1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000336  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002e2  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000336  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000368  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b8  00000000  00000000  000003a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d6f  00000000  00000000  00000460  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000aff  00000000  00000000  000011cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005f5  00000000  00000000  00001cce  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001f0  00000000  00000000  000022c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005dd  00000000  00000000  000024b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000002cb  00000000  00000000  00002a91  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000098  00000000  00000000  00002d5c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
   8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
   c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  10:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  14:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  18:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  1c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  20:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  24:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  28:	0c 94 35 01 	jmp	0x26a	; 0x26a <__vector_10>
  2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__vector_11>
  30:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  34:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  38:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  3c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  40:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  44:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  48:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  4c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  50:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  54:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  58:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  5c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  60:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  64:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  68:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  6c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  70:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  74:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  78:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  7c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  80:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  84:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  88:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  8c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  90:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  94:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  98:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  9c:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a0:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a4:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>
  a8:	0c 94 73 00 	jmp	0xe6	; 0xe6 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61

000000b8 <__do_copy_data>:
  b8:	11 e0       	ldi	r17, 0x01	; 1
  ba:	a0 e0       	ldi	r26, 0x00	; 0
  bc:	b1 e0       	ldi	r27, 0x01	; 1
  be:	e2 ee       	ldi	r30, 0xE2	; 226
  c0:	f2 e0       	ldi	r31, 0x02	; 2
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <__do_copy_data+0x10>
  c4:	05 90       	lpm	r0, Z+
  c6:	0d 92       	st	X+, r0
  c8:	a0 30       	cpi	r26, 0x00	; 0
  ca:	b1 07       	cpc	r27, r17
  cc:	d9 f7       	brne	.-10     	; 0xc4 <__do_copy_data+0xc>

000000ce <__do_clear_bss>:
  ce:	21 e0       	ldi	r18, 0x01	; 1
  d0:	a0 e0       	ldi	r26, 0x00	; 0
  d2:	b1 e0       	ldi	r27, 0x01	; 1
  d4:	01 c0       	rjmp	.+2      	; 0xd8 <.do_clear_bss_start>

000000d6 <.do_clear_bss_loop>:
  d6:	1d 92       	st	X+, r1

000000d8 <.do_clear_bss_start>:
  d8:	a0 30       	cpi	r26, 0x00	; 0
  da:	b2 07       	cpc	r27, r18
  dc:	e1 f7       	brne	.-8      	; 0xd6 <.do_clear_bss_loop>
  de:	0e 94 75 00 	call	0xea	; 0xea <main>
  e2:	0c 94 6f 01 	jmp	0x2de	; 0x2de <_exit>

000000e6 <__bad_interrupt>:
  e6:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ea <main>:
#include <avr/io.h>
#include <avr/interrupt.h>
#include "usb_common.h"

int main(void) {
	usbCommonInit();
  ea:	0e 94 79 00 	call	0xf2	; 0xf2 <usbCommonInit>
	sei();
  ee:	78 94       	sei
  f0:	ff cf       	rjmp	.-2      	; 0xf0 <main+0x6>

000000f2 <usbCommonInit>:
	USB_reset_endpoint(USB_EP3_NUM);
		
	USB_ack_reset();
}

void handleIDTransitionIRQ() {
  f2:	e8 ed       	ldi	r30, 0xD8	; 216
  f4:	f0 e0       	ldi	r31, 0x00	; 0
  f6:	80 81       	ld	r24, Z
  f8:	80 69       	ori	r24, 0x90	; 144
  fa:	80 83       	st	Z, r24
  fc:	80 81       	ld	r24, Z
  fe:	81 60       	ori	r24, 0x01	; 1
 100:	80 83       	st	Z, r24
 102:	08 95       	ret

00000104 <getEndpointNrFromIrq>:
 104:	80 e0       	ldi	r24, 0x00	; 0
 106:	0c c0       	rjmp	.+24     	; 0x120 <getEndpointNrFromIrq+0x1c>
 108:	20 91 f4 00 	lds	r18, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	08 2e       	mov	r0, r24
 110:	02 c0       	rjmp	.+4      	; 0x116 <getEndpointNrFromIrq+0x12>
 112:	35 95       	asr	r19
 114:	27 95       	ror	r18
 116:	0a 94       	dec	r0
 118:	e2 f7       	brpl	.-8      	; 0x112 <getEndpointNrFromIrq+0xe>
 11a:	20 fd       	sbrc	r18, 0
 11c:	04 c0       	rjmp	.+8      	; 0x126 <getEndpointNrFromIrq+0x22>
 11e:	8f 5f       	subi	r24, 0xFF	; 255
 120:	88 30       	cpi	r24, 0x08	; 8
 122:	90 f3       	brcs	.-28     	; 0x108 <getEndpointNrFromIrq+0x4>
 124:	80 e0       	ldi	r24, 0x00	; 0
 126:	08 95       	ret

00000128 <handleEPControlIRQ>:
 128:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
 12c:	83 ff       	sbrs	r24, 3
 12e:	05 c0       	rjmp	.+10     	; 0x13a <handleEPControlIRQ+0x12>
 130:	e8 ee       	ldi	r30, 0xE8	; 232
 132:	f0 e0       	ldi	r31, 0x00	; 0
 134:	80 81       	ld	r24, Z
 136:	87 7f       	andi	r24, 0xF7	; 247
 138:	80 83       	st	Z, r24
 13a:	08 95       	ret

0000013c <handleEP1IRQ>:
 13c:	e1 ef       	ldi	r30, 0xF1	; 241
 13e:	f0 e0       	ldi	r31, 0x00	; 0
 140:	10 82       	st	Z, r1
 142:	10 82       	st	Z, r1
 144:	e8 ee       	ldi	r30, 0xE8	; 232
 146:	f0 e0       	ldi	r31, 0x00	; 0
 148:	80 81       	ld	r24, Z
 14a:	8e 7f       	andi	r24, 0xFE	; 254
 14c:	80 83       	st	Z, r24
 14e:	80 81       	ld	r24, Z
 150:	8f 77       	andi	r24, 0x7F	; 127
 152:	80 83       	st	Z, r24
 154:	08 95       	ret

00000156 <handleEP2IRQ>:
 156:	e8 ee       	ldi	r30, 0xE8	; 232
 158:	f0 e0       	ldi	r31, 0x00	; 0
 15a:	80 81       	ld	r24, Z
 15c:	8e 7f       	andi	r24, 0xFE	; 254
 15e:	80 83       	st	Z, r24
 160:	80 81       	ld	r24, Z
 162:	8f 77       	andi	r24, 0x7F	; 127
 164:	80 83       	st	Z, r24
 166:	08 95       	ret

00000168 <handleEP3IRQ>:
 168:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
 16c:	82 ff       	sbrs	r24, 2
 16e:	0b c0       	rjmp	.+22     	; 0x186 <handleEP3IRQ+0x1e>
 170:	e8 ee       	ldi	r30, 0xE8	; 232
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	8b 7f       	andi	r24, 0xFB	; 251
 178:	80 83       	st	Z, r24
 17a:	80 81       	ld	r24, Z
 17c:	8b 7f       	andi	r24, 0xFB	; 251
 17e:	80 83       	st	Z, r24
 180:	80 81       	ld	r24, Z
 182:	8f 77       	andi	r24, 0x7F	; 127
 184:	80 83       	st	Z, r24
 186:	08 95       	ret

00000188 <__vector_11>:
 188:	1f 92       	push	r1
 18a:	0f 92       	push	r0
 18c:	0f b6       	in	r0, 0x3f	; 63
 18e:	0f 92       	push	r0
 190:	11 24       	eor	r1, r1
 192:	2f 93       	push	r18
 194:	3f 93       	push	r19
 196:	4f 93       	push	r20
 198:	5f 93       	push	r21
 19a:	6f 93       	push	r22
 19c:	7f 93       	push	r23
 19e:	8f 93       	push	r24
 1a0:	9f 93       	push	r25
 1a2:	af 93       	push	r26
 1a4:	bf 93       	push	r27
 1a6:	ef 93       	push	r30
 1a8:	ff 93       	push	r31
 1aa:	1a c0       	rjmp	.+52     	; 0x1e0 <__vector_11+0x58>
 1ac:	0e 94 82 00 	call	0x104	; 0x104 <getEndpointNrFromIrq>
 1b0:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7f80e9>
 1b4:	81 30       	cpi	r24, 0x01	; 1
 1b6:	49 f0       	breq	.+18     	; 0x1ca <__vector_11+0x42>
 1b8:	28 f0       	brcs	.+10     	; 0x1c4 <__vector_11+0x3c>
 1ba:	82 30       	cpi	r24, 0x02	; 2
 1bc:	49 f0       	breq	.+18     	; 0x1d0 <__vector_11+0x48>
 1be:	83 30       	cpi	r24, 0x03	; 3
 1c0:	51 f0       	breq	.+20     	; 0x1d6 <__vector_11+0x4e>
 1c2:	0c c0       	rjmp	.+24     	; 0x1dc <__vector_11+0x54>
 1c4:	0e 94 94 00 	call	0x128	; 0x128 <handleEPControlIRQ>
 1c8:	0b c0       	rjmp	.+22     	; 0x1e0 <__vector_11+0x58>
 1ca:	0e 94 9e 00 	call	0x13c	; 0x13c <handleEP1IRQ>
 1ce:	08 c0       	rjmp	.+16     	; 0x1e0 <__vector_11+0x58>
 1d0:	0e 94 ab 00 	call	0x156	; 0x156 <handleEP2IRQ>
 1d4:	05 c0       	rjmp	.+10     	; 0x1e0 <__vector_11+0x58>
 1d6:	0e 94 b4 00 	call	0x168	; 0x168 <handleEP3IRQ>
 1da:	02 c0       	rjmp	.+4      	; 0x1e0 <__vector_11+0x58>
 1dc:	10 92 e8 00 	sts	0x00E8, r1	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7f80e8>
 1e0:	80 91 f4 00 	lds	r24, 0x00F4	; 0x8000f4 <__TEXT_REGION_LENGTH__+0x7f80f4>
 1e4:	81 11       	cpse	r24, r1
 1e6:	e2 cf       	rjmp	.-60     	; 0x1ac <__vector_11+0x24>
 1e8:	ff 91       	pop	r31
 1ea:	ef 91       	pop	r30
 1ec:	bf 91       	pop	r27
 1ee:	af 91       	pop	r26
 1f0:	9f 91       	pop	r25
 1f2:	8f 91       	pop	r24
 1f4:	7f 91       	pop	r23
 1f6:	6f 91       	pop	r22
 1f8:	5f 91       	pop	r21
 1fa:	4f 91       	pop	r20
 1fc:	3f 91       	pop	r19
 1fe:	2f 91       	pop	r18
 200:	0f 90       	pop	r0
 202:	0f be       	out	0x3f, r0	; 63
 204:	0f 90       	pop	r0
 206:	1f 90       	pop	r1
 208:	18 95       	reti

0000020a <handleSOFIRQ>:
	USB_ack_id_transition();
	// no action taken
}	

void handleSOFIRQ() {
	USB_ack_sof();
 20a:	8b ef       	ldi	r24, 0xFB	; 251
 20c:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
 210:	08 95       	ret

00000212 <handleSusplendIRQ>:
	// no action taken
}

void handleSusplendIRQ() {
	//USB_enable_wake_up_interrupt();
	USB_ack_wake_up();                 // clear wake up to detect next event
 212:	e1 ee       	ldi	r30, 0xE1	; 225
 214:	f0 e0       	ldi	r31, 0x00	; 0
 216:	8f ee       	ldi	r24, 0xEF	; 239
 218:	80 83       	st	Z, r24
	USB_freeze_clock();
 21a:	a8 ed       	ldi	r26, 0xD8	; 216
 21c:	b0 e0       	ldi	r27, 0x00	; 0
 21e:	8c 91       	ld	r24, X
 220:	80 62       	ori	r24, 0x20	; 32
 222:	8c 93       	st	X, r24
	set_sleep_mode(SLEEP_MODE_PWR_DOWN);
 224:	83 b7       	in	r24, 0x33	; 51
 226:	81 7f       	andi	r24, 0xF1	; 241
 228:	84 60       	ori	r24, 0x04	; 4
 22a:	83 bf       	out	0x33, r24	; 51
	sleep_mode();
 22c:	83 b7       	in	r24, 0x33	; 51
 22e:	81 60       	ori	r24, 0x01	; 1
 230:	83 bf       	out	0x33, r24	; 51
 232:	88 95       	sleep
 234:	83 b7       	in	r24, 0x33	; 51
 236:	8e 7f       	andi	r24, 0xFE	; 254
 238:	83 bf       	out	0x33, r24	; 51
	USB_ack_suspend();
 23a:	8e ef       	ldi	r24, 0xFE	; 254
 23c:	80 83       	st	Z, r24
 23e:	08 95       	ret

00000240 <handleUSBWakeUpIRQ>:
}	

void handleUSBWakeUpIRQ() {
	//USB_unfreeze_clock();
	USB_ack_wake_up();
 240:	8f ee       	ldi	r24, 0xEF	; 239
 242:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
	USB_disable_wake_up_interrupt();
 246:	e2 ee       	ldi	r30, 0xE2	; 226
 248:	f0 e0       	ldi	r31, 0x00	; 0
 24a:	80 81       	ld	r24, Z
 24c:	8f 7e       	andi	r24, 0xEF	; 239
 24e:	80 83       	st	Z, r24
 250:	08 95       	ret

00000252 <handleUSBResumeIRQ>:
	// no action taken
}	

void handleUSBResumeIRQ() {
	USB_disable_wake_up_interrupt();
 252:	e2 ee       	ldi	r30, 0xE2	; 226
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	80 81       	ld	r24, Z
 258:	8f 7e       	andi	r24, 0xEF	; 239
 25a:	80 83       	st	Z, r24
	USB_disable_resume_interrupt();
 25c:	80 81       	ld	r24, Z
 25e:	8f 7d       	andi	r24, 0xDF	; 223
 260:	80 83       	st	Z, r24
	// no action taken
	USB_ack_resume();
 262:	8f ed       	ldi	r24, 0xDF	; 223
 264:	80 93 e1 00 	sts	0x00E1, r24	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
 268:	08 95       	ret

0000026a <__vector_10>:
}	
	

ISR (USB_GEN_vect) {		
 26a:	1f 92       	push	r1
 26c:	0f 92       	push	r0
 26e:	0f b6       	in	r0, 0x3f	; 63
 270:	0f 92       	push	r0
 272:	11 24       	eor	r1, r1
 274:	2f 93       	push	r18
 276:	3f 93       	push	r19
 278:	4f 93       	push	r20
 27a:	5f 93       	push	r21
 27c:	6f 93       	push	r22
 27e:	7f 93       	push	r23
 280:	8f 93       	push	r24
 282:	9f 93       	push	r25
 284:	af 93       	push	r26
 286:	bf 93       	push	r27
 288:	ef 93       	push	r30
 28a:	ff 93       	push	r31
	if (is_USB_vbus_transition()); // handleVbusTransitionIRQ();
 28c:	80 91 da 00 	lds	r24, 0x00DA	; 0x8000da <__TEXT_REGION_LENGTH__+0x7f80da>
	if (is_USB_reset()); //	handleResetIRQ();
 290:	e1 ee       	ldi	r30, 0xE1	; 225
 292:	f0 e0       	ldi	r31, 0x00	; 0
 294:	80 81       	ld	r24, Z
	if (is_USB_id_transition()) handleIDTransitionIRQ();
	if (is_USB_sof()) handleSOFIRQ();
 296:	80 81       	ld	r24, Z
 298:	82 fd       	sbrc	r24, 2
 29a:	0e 94 05 01 	call	0x20a	; 0x20a <handleSOFIRQ>
	if (is_USB_suspend()) handleSusplendIRQ();
 29e:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
 2a2:	80 fd       	sbrc	r24, 0
 2a4:	0e 94 09 01 	call	0x212	; 0x212 <handleSusplendIRQ>
	if (is_USB_wake_up()) handleUSBWakeUpIRQ();
 2a8:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
 2ac:	84 fd       	sbrc	r24, 4
 2ae:	0e 94 20 01 	call	0x240	; 0x240 <handleUSBWakeUpIRQ>
	if (is_USB_resume()) handleUSBResumeIRQ();
 2b2:	80 91 e1 00 	lds	r24, 0x00E1	; 0x8000e1 <__TEXT_REGION_LENGTH__+0x7f80e1>
 2b6:	85 fd       	sbrc	r24, 5
 2b8:	0e 94 29 01 	call	0x252	; 0x252 <handleUSBResumeIRQ>
}	
 2bc:	ff 91       	pop	r31
 2be:	ef 91       	pop	r30
 2c0:	bf 91       	pop	r27
 2c2:	af 91       	pop	r26
 2c4:	9f 91       	pop	r25
 2c6:	8f 91       	pop	r24
 2c8:	7f 91       	pop	r23
 2ca:	6f 91       	pop	r22
 2cc:	5f 91       	pop	r21
 2ce:	4f 91       	pop	r20
 2d0:	3f 91       	pop	r19
 2d2:	2f 91       	pop	r18
 2d4:	0f 90       	pop	r0
 2d6:	0f be       	out	0x3f, r0	; 63
 2d8:	0f 90       	pop	r0
 2da:	1f 90       	pop	r1
 2dc:	18 95       	reti

000002de <_exit>:
 2de:	f8 94       	cli

000002e0 <__stop_program>:
 2e0:	ff cf       	rjmp	.-2      	; 0x2e0 <__stop_program>
